<table class="table table-sm table-striped table-bordered">
    <thead>
        <tr><th colspan="5" class="text-center">@TableTitle</th></tr> @* Means we'll have a table with 5 columns *@
    </thead>
    <tbody>
        @if (Orders?.Count() > 0)
        {
            @foreach (Order o in Orders)
            {
                <tr>
                    <td>@o.Name</td>
                    <td>@o.Zip</td>
                    <th>Product</th>
                    <th>Quantity</th>

                    <td>
                        <button class="btn btn-sm btn-danger" @onclick="@(e=>OrderSelected.InvokeAsync(o.OrderID))">@ButtonLabel</button>
                    </td>
                </tr>
                @foreach (CartLine line in o.Lines)
                {
                    <tr>
                        <td colspan="2"></td> @* Means make 2 columns empty so as to skip those columns so that <td>@line.Product.Name</td>would appear below <th>Product</th> *@
                        <td>@line.Product.Name</td>
                        <td>@line.Quantity</td>
                    </tr>
                }
            }
        }
        else
        {
            <tr><td colspan="5" class="text-center">No Orders</td></tr>
        }
    </tbody>
</table>

@code{
    [Parameter]
    public string TableTitle { get; set; } = "Orders";

    [Parameter]
    public IEnumerable<Order> Orders { get; set; }

    [Parameter]
    public string ButtonLabel { get; set; } = "Ship";

    [Parameter]
    public EventCallback<int> OrderSelected { get; set; }
}
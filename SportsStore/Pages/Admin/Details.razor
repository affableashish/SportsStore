@page "/admin/products/details/{id:long}"
@inherits OwningComponentBase<IStoreRepository>

<h3 class="bg-info text-white text-center p-1">Details</h3>

<table class="table table-sm table-bordered table-striped">
    <tbody>
        <tr><th>ID</th><td>@Product.ProductID</td></tr>
        <tr><th>Name</th><td>@Product.Name</td></tr>
        <tr><th>Description</th><td>@Product.Description</td></tr>
        <tr><th>Category</th><td>@Product.Category</td></tr>
        <tr><th>Price</th><td>@Product.Price.ToString("C")</td></tr>
    </tbody>
</table>

<NavLink class="btn btn-warning" href="@EditUrl">Edit</NavLink>
<NavLink class="btn btn-secondary" href="/admin/products">Back</NavLink>

@code {
    @*  Inject attribute says that this component requires an implementation of IStoreRepository interface.
        Inject attribute won't refresh the Repository for every component load,
        whereas @inherits OwningComponentBase does so. *@
    @*[Inject]
    public IStoreRepository Repository { get; set; }*@
    public IStoreRepository Repository => Service;
    [Parameter]
    public long Id { get; set; }
    public Product Product { get; set; }
    protected override void OnParametersSet()
    {
        Product = Repository.Products.FirstOrDefault(p => p.ProductID == Id);
    }

    public string EditUrl => $"admin/products/edit/{Product.ProductID}";
}
